<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>timmesserschmidt</title>
  <subtitle>Developer Relations</subtitle>
  <id>http://timmesserschmidt.com/blog</id>
  <link href="http://timmesserschmidt.com/blog"/>
  <link href="http://timmesserschmidt.com/feed.xml" rel="self"/>
  <updated>2016-02-29T00:00:00+01:00</updated>
  <author>
    <name>Tim Messerschmidt</name>
  </author>
  <entry>
    <title>Time for change</title>
    <link rel="alternate" href="http://timmesserschmidt.com/blog/2016/02/29/time-for-change/"/>
    <id>http://timmesserschmidt.com/blog/2016/02/29/time-for-change/</id>
    <published>2016-02-29T00:00:00+01:00</published>
    <updated>2016-03-11T13:50:31+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;It&amp;rsquo;s time to officially announce that I am parting ways with PayPal. After more than three and a half years of working with the PayPal and Braintree Developer Relations team, it is time for me to move on, seek new adventures and expose myself to new challenges.&lt;/p&gt;



&lt;p&gt;I am incredibly excited to publicize that I will join Google&amp;rsquo;s Developer Relations team as Program Manager for the German speaking market. Google always invested time, energy and resources into the developer and startup community and I am very happy to be able to contribute to their efforts.&lt;/p&gt;

&lt;p&gt;My work at PayPal and Braintree exposed me to many brilliant people and I&amp;rsquo;d like to thank all of you for your feedback and advice throughout my time in this company. Another thanks goes to the community for embracing me, allowing me to share my thoughts and opinions on stages across the world and by suprising me on a daily base.&lt;/p&gt;

&lt;p&gt;Tim&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Retinizer</title>
    <link rel="alternate" href="http://timmesserschmidt.com/blog/2015/07/19/retinizer/"/>
    <id>http://timmesserschmidt.com/blog/2015/07/19/retinizer/</id>
    <published>2015-07-19T23:25:00+02:00</published>
    <updated>2016-03-11T13:50:36+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I&amp;rsquo;ve been using a MacBook Air for the last couple of years and have not had the pleasure of working with a Retina resolution Mac. This changed last week when I finally got my new shiny 2015 MacBook Pro 15&amp;quot; and got introduced to the world of sharp text and proper display resolutions.&lt;/p&gt;



&lt;p&gt;While most of the apps that are being released for OSX nowadays support Retina resolutions out of the box, some apps sadly don&amp;rsquo;t. This means that users have to deal with pixelated UIs that simply are not fun to use.&lt;/p&gt;

&lt;p&gt;Gladly a quick search led to &lt;a href="http://retinizer.mikelpr.com/"&gt;Retinizer&lt;/a&gt;, a simple app that improves behaviour of Cocoa-based apps by drawing 1x widgets as 2x widgets.&lt;/p&gt;

&lt;p&gt;The app is free (donations via PayPal are welcome) and is definitely worth a try.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Taming Ruby with rbenv</title>
    <link rel="alternate" href="http://timmesserschmidt.com/blog/2015/07/16/taming-ruby-with-rbenv/"/>
    <id>http://timmesserschmidt.com/blog/2015/07/16/taming-ruby-with-rbenv/</id>
    <published>2015-07-16T17:34:00+02:00</published>
    <updated>2016-03-13T17:10:04+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;My colleague &lt;a href="http://cristianobetta.com"&gt;Cristiano&lt;/a&gt; told me about &lt;a href="http://github.com/sstephenson/rbenv"&gt;rbenv&lt;/a&gt; a couple of months ago. This was when I&amp;rsquo;ve already setup my Ruby development environment using &lt;a href="http://rvm.io"&gt;rvm&lt;/a&gt; - I didn&amp;rsquo;t get to appreciate the real power of rbenv until a few days ago: I just got a new MacBook Pro as developer machine and had to set up Ruby again in order to work with my blog and a couple of other projects.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2&gt;What I appreciate about rbenv&lt;/h2&gt;

&lt;p&gt;A quick example would be working with gemfiles and different ruby versions across mutiple projects. My blog is using Ruby 1.9.3, whereas my newer projects run on 2.2.2. When I entered &lt;code&gt;bundle install&lt;/code&gt; for the first time after cloning the source in order to install all the gems my Octopress-based blog relies on rbenv gave me the following feedback:&lt;/p&gt;
&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;rbenv: version &lt;span class="sb"&gt;`&lt;/span&gt;1.9.3-p194&lt;span class="s1"&gt;' is not installed
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The logical step was installing and setting up that particular version of Ruby: &lt;code&gt;rbenv install 1.9.3-p194&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After the installation finished I ran &lt;code&gt;bundle install&lt;/code&gt; again and rbenv told me that I did not set up bundle for Ruby 1.9.3 (but for 2.2.2):&lt;/p&gt;
&lt;div class="highlight plaintext"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;blog git:(source) bundler install
rbenv: bundler: command not found

The `bundler' command exists in these Ruby versions:
  2.2.2
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;All I had to do was running the following commands in order to complete the setup:&lt;/p&gt;
&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;gem install bundler
rbenv rehash
bundler
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;During this whole process rbenv held my hand. I really like the constant feedback. It always tells me what to do next and keeps me informed why certain things don&amp;rsquo;t work. Especially as a hobby-Rubyist and mostly Android &amp;amp; Node developer this was incredibly helpful.&lt;/p&gt;

&lt;p&gt;Two other commands I find useful are &lt;code&gt;rbenv install -l&lt;/code&gt;, which lists all Ruby versions that are available for installation, and &lt;code&gt;rbenv global&lt;/code&gt;, a command that allows to display and set the system-wide Ruby version.&lt;/p&gt;

&lt;p&gt;In order to realize this particular feature rbenv is using shims that sit in your &lt;code&gt;PATH&lt;/code&gt;-variable.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d be happy to hear if this post helped you with your Ruby setup (or why you still prefer rvm). Cheers!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>My I/O 2015 Highlights</title>
    <link rel="alternate" href="http://timmesserschmidt.com/blog/2015/06/05/my-io-2015-highlights/"/>
    <id>http://timmesserschmidt.com/blog/2015/06/05/my-io-2015-highlights/</id>
    <published>2015-06-05T20:39:00+02:00</published>
    <updated>2016-03-11T13:50:25+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Last week the &lt;a href="https://events.google.com/io2015/"&gt;8th edition of Google I/O&lt;/a&gt;, Google’s annual developer conference in San Francisco, was held in the Moscone Center. Personally, I’ve attended 4 of them so far and have to admit that I’ve never left without being impressed by Google pushing the technology space forward.
Let’s go through my favorite two new announcements that were presented during the two days of constant talks, code labs and engaging side activities.&lt;/p&gt;



&lt;h2&gt;Security&lt;/h2&gt;

&lt;p&gt;It is known that I am a security geek and love hearing about what other companies are up to in the authentication space. Luckily Google is part of the &lt;a href="http://fidoalliance.org/"&gt;FIDO alliance&lt;/a&gt;, an industry consortium founded by PayPal and Lenovo, that addresses the multiple issues in authentication by providing a standard amongst all form factors. During the keynote Google  announced additional features for Smart Lock, a system focused on leveraging the phone as central key for your environment, and something that made me incredibly happy: &lt;a href="http://developer.chrome.com/multidevice/android/customtabs"&gt;support for fingerprint authentication&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Google also introduced the concept of App Links, a mechanism that helps to secure linking between apps and the web, plus an improved permission system. Android Developers have been asking for &lt;a href="https://developer.android.com/preview/features/runtime-permissions.html"&gt;more granular permissions&lt;/a&gt; and especially optional permissions for a long time and it’s great that they were finally heard. The new system allows offering your users the choice of sharing personal information like location, photos or access to contacts instead of enforcing an All-In model.&lt;/p&gt;

&lt;h2&gt;Payments&lt;/h2&gt;

&lt;p&gt;Braintree got announced as &lt;a href="https://www.braintreepayments.com/blog/integrating-android-pay"&gt;launch partner for Google’s new payment system &amp;lsquo;Android Pay&amp;rsquo;&lt;/a&gt;. This means that Braintree’s SDK can be used to facilitate Android Pay payments on the user&amp;rsquo;s behalf. The interesting bit here is that you can add Android Pay support through Braintree with a few lines of code (I manage a complete integration in less than 5 minutes) to an existing Google Wallet integration or bring support for Android Pay to an existing Braintree v.zero SDK integration with little effort.&lt;/p&gt;

&lt;p&gt;We, as developers, can achieve an amazing user experience by reducing the friction of paying within apps or at the point of sale to a simple process, especially in combination with fingerprint authentication.&lt;/p&gt;

&lt;h2&gt;What else was cool?&lt;/h2&gt;

&lt;p&gt;I love the introduction of &lt;a href="https://developer.chrome.com/multidevice/android/customtabs"&gt;Chrome Custom Tabs&lt;/a&gt;. WebView’s always felt a bit odd when being integrated into an app. A lot of customization had to be done and simple things like stored credentials couldn’t be accessed. On the other hand launching a full-blown browser through an Intent meant a change of context and wasn’t a great experience in terms of branding and user retention.&lt;/p&gt;

&lt;p&gt;Google realized the potential to improve this by allowing people to launch branded Chrome tabs that bring the same features a regular Chrome browser instance would offer.&lt;/p&gt;

&lt;h2&gt;Android M and what’s next&lt;/h2&gt;

&lt;p&gt;Attending I/O was great - again - and I am very excited to see how Android M will evolve over the next few months. It’ll be interesting to see how developers will adopt the new features the OS brought and how much new APIs will be added on top of what we’ve seen during the sessions.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Toward an inclusive Hackathon culture</title>
    <link rel="alternate" href="http://timmesserschmidt.com/blog/2014/09/10/hackathon-culture/"/>
    <id>http://timmesserschmidt.com/blog/2014/09/10/hackathon-culture/</id>
    <published>2014-09-10T09:17:00+02:00</published>
    <updated>2016-03-11T13:50:41+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;In the last few days there has been a vivid (and sadly also depressing) discussion about how to behave properly at tech events to ensure a great experience for everyone.&lt;/p&gt;



&lt;p&gt;There have been posts like &lt;a href="https://medium.com/@superandomness/hackathons-are-for-hacking-2bba198ffebd"&gt;Hackathons are for Hacking&lt;/a&gt; by Cassidy Williams and &lt;a href="http://rubinovitz.com/post/97138278847/the-future-of-hackathons"&gt;The Future of Hackathons&lt;/a&gt; written by Jennifer Rubinovitz that are incredibly encouraging and tap into some of the problems that are surfacing right now.&lt;/p&gt;

&lt;p&gt;Being part of the organization team behind &lt;a href="http://2014.battlehack.org"&gt;BattleHack&lt;/a&gt; - PayPal&amp;rsquo;s global series of hackathons - I strongly encourage everyone to both provide and enforce a Code of Conduct. When introducing a CoC to our hacks we&amp;rsquo;ve been researching for &amp;ldquo;common patterns&amp;rdquo; and best practices for defining a proper ruleset for our attendees and discovered &lt;a href="http://confcodeofconduct.com/"&gt;Conference Code of Conduct&lt;/a&gt;. My team member &lt;a href="http://cristianobetta.com/"&gt;Cristiano Betta&lt;/a&gt; forked the project and started &lt;a href="http://hackcodeofconduct.org/"&gt;Hack Code of Conduct&lt;/a&gt; - a CoC tailored towards hackathons. Since this project got released into the wild we&amp;rsquo;ve seen incredible support from various event organizers and tech representatives.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s continue to make hackathons and tech events a place where everybody is welcome. We should strongly encourage everybody who wants to be part of this ecosystem to provide and support a code of conduct for their events. Providing a code of conduct allows victims of discrimination and abuse a clear line of support and establishes that organisers are conscious of instances of people misbehaving - thus also becoming accountable for these actions.&lt;/p&gt;

&lt;p&gt;Introducing Code of Conducts to events might not solve all the problems that the tech industry is facing right now but it definitely is a step into the right direction - event organizers acknowledging the problem and accepting responsibility for its resolution.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Using npm modules via GitHub</title>
    <link rel="alternate" href="http://timmesserschmidt.com/blog/2014/06/01/using-npm-modules-from-github/"/>
    <id>http://timmesserschmidt.com/blog/2014/06/01/using-npm-modules-from-github/</id>
    <published>2014-06-01T08:53:00+02:00</published>
    <updated>2016-03-13T17:08:50+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;At most of the hackathons that I am attending for PayPal I see people running into the same issues with Node projects over and over again: a certain Node module they want to use (via &lt;a href="http://npmjs.org/"&gt;npmjs.org&lt;/a&gt;) is faulty or doesn&amp;rsquo;t 100% do what they want to do and they have no idea how to change this.&lt;/p&gt;



&lt;p&gt;For most of the popular modules like &lt;a href="http://passportjs.org/"&gt;Passport&lt;/a&gt; there is a &lt;a href="https://github.com/jaredhanson/passport"&gt;GitHub repo&lt;/a&gt; that is received frequest pull requests that either fix issues or add new functionality. In case these changes (that you might want to access) were not merged into the project and the module was redeployed to npmjs.org there is no simple way to just run &lt;code&gt;npm install package_name&lt;/code&gt; to access these features.&lt;/p&gt;

&lt;p&gt;Gladly there is a way to modules that were hosted on GitHub by modifying your project&amp;rsquo;s &lt;code&gt;package.json&lt;/code&gt; file. I&amp;rsquo;ll show you how by using the example of using Passport for Node with an updated version of the &lt;a href="http://github.com/jaredhanson/passport-paypal-oauth"&gt;PayPal Strategy&lt;/a&gt; (since the old one uses scopes and endpoints that we don&amp;rsquo;t use anymore).&lt;/p&gt;

&lt;p&gt;The dependencies section in &lt;code&gt;package.json&lt;/code&gt;&amp;lsquo;would look like the following after running both &lt;code&gt;npm install passport --save&lt;/code&gt; and &lt;code&gt;npm install passport-paypal-oauth --save&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight javascript"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="s2"&gt;"dependencies"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="p"&gt;[...],&lt;/span&gt;  
    &lt;span class="s2"&gt;"passport"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^0.2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
    &lt;span class="s2"&gt;"passport-paypal-oauth"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^0.1.0"&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;As you can see in &lt;a href="http://github.com/seraphimserapis/"&gt;my GitHub profile&lt;/a&gt; I&amp;rsquo;ve &lt;a href="http://github.com/SeraphimSerapis/passport-paypal-oauth"&gt;forked the repository&lt;/a&gt; to update the code and &lt;a href="http://github.com/jaredhanson/passport-paypal-oauth/pull/3"&gt;filed a pull request&lt;/a&gt;. As it didn&amp;rsquo;t get accepted yet there is no simple way for people to use &lt;a href="http://developer.paypal.com/docs/integration/direct/identity/"&gt;link&lt;/a&gt;Log In with PayPal within their Node projects (without implementing it themself).&lt;/p&gt;

&lt;p&gt;To change this we&amp;rsquo;ll update our package.json to point to the GitHub repository:&lt;/p&gt;
&lt;div class="highlight javascript"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="s2"&gt;"dependencies"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[...],&lt;/span&gt;
    &lt;span class="s2"&gt;"passport"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^0.2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"passport-paypal-oauth"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"https://github.com/SeraphimSerapis/passport-paypal-oauth/tarball/master"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;By adding the Node modules repository and adding &lt;code&gt;/tarball/master&lt;/code&gt; to the URL you provide a mechanism for &lt;code&gt;npm&lt;/code&gt; to hook into the updated module and avoid messy things like editing the module yourself or copy pasting code.&lt;/p&gt;

&lt;p&gt;When looking into the &lt;a href="http://www.npmjs.org/doc/cli/npm-install.html"&gt;documentation&lt;/a&gt; for &lt;code&gt;npm install&lt;/code&gt; you&amp;rsquo;ll notice that a few different notations and methods are supported. You can even do thinks like accessing certain tags or branches:&lt;/p&gt;
&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;git+ssh://git@github.com:npm/npm.git#v1.0.27
git+https://isaacs@github.com/npm/npm.git
git://github.com/npm/npm.git#v1.0.27
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Let me know what you think,&lt;br&gt;
Tim&lt;/p&gt;
</content>
  </entry>
</feed>
